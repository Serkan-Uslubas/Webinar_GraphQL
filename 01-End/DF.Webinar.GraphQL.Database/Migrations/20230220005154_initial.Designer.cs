// <auto-generated />
using System;
using DF.Webinar.GraphQL.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DF.Webinar.GraphQL.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230220005154_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DF.Webinar.GraphQL.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Martin",
                            LastName = "Fowler"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Robert C.",
                            LastName = "Martin"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Erich",
                            LastName = "Gamma"
                        });
                });

            modelBuilder.Entity("DF.Webinar.GraphQL.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AuthorId")
                        .HasColumnType("bigint");

                    b.Property<int?>("AuthorId1")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isbn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Pages")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearOfPublication")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId1");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1L,
                            Description = "Improving the Design of Existing Code",
                            Title = "Refactoring",
                            YearOfPublication = 2018
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1L,
                            Description = "A Brief Guide to the Emerging World of Polyglot Persistence",
                            Title = "NoSQL Distilled",
                            YearOfPublication = 2012
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1L,
                            Description = "A detailed guide on implementing both internal and external DSLs",
                            Title = "Domain Specific Languages",
                            YearOfPublication = 2010
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 1L,
                            Description = "By Martin Fowler, with Dave Rice, Matthew Foemmel, Edward Hieatt, Robert Mee, and Randy Stafford",
                            Title = "Patterns of Enterprise Application Architecture",
                            YearOfPublication = 2002
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 1L,
                            Description = "Now there are quite a few XP and agile books out there, many of which focus on planning and project management issues.",
                            Title = "Planning Extreme Programming",
                            YearOfPublication = 2000
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 1L,
                            Description = "The patterns come from various domains, including health care, financial trading, and accounting.",
                            Title = "Analysis Patterns",
                            YearOfPublication = 1996
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 1L,
                            Description = "A Brief Guide to the Standard Object Modeling Language",
                            Title = "UML Distilled",
                            YearOfPublication = 2003
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 2L,
                            Description = "Applications Using the Booch Method",
                            Title = "Designing Object-Oriented C++",
                            YearOfPublication = 1995
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 2L,
                            Description = "Principles, Patterns, and Practices.",
                            Title = "Agile Software Development",
                            YearOfPublication = 2002
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 2L,
                            Description = "A Handbook of Agile Software Craftsmanship",
                            Title = "Clean Code",
                            YearOfPublication = 2009
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 2L,
                            Description = " A Craftsman's Guide to Software Structure and Design",
                            Title = "Clean Architecture",
                            YearOfPublication = 2017
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 2L,
                            Description = "Back to Basics",
                            Title = "Clean Agile",
                            YearOfPublication = 2019
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 3L,
                            Description = "Elements of Reusable Object-Oriented Software",
                            Title = "Design Patterns",
                            YearOfPublication = 1997
                        });
                });

            modelBuilder.Entity("DF.Webinar.GraphQL.Models.Book", b =>
                {
                    b.HasOne("DF.Webinar.GraphQL.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId1");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("DF.Webinar.GraphQL.Models.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
